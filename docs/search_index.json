[["index.html", "學習使用 R Markdown 寫書 前言 致謝", " 學習使用 R Markdown 寫書 Steven Wang 王先誠 2021-04-05 前言 大家好，我是王先誠。目前這是一本我個人的學習紀錄，內容包括R語言( R programming )、 SPSS 、科技部小論文等等，第 1 章介紹了用R進行資料處理，第 2 章說了用R進行繪圖，然後是啥……透過電子書的方式，讓我累積自己的作品，檢視自己的成長、參照之前的程式碼，並且持續更新與精進。 致謝 非常感謝我父母從小對我的栽培，以及在大學時在社會學系和經濟學系遇到的老師，啟蒙了我對於資料處理的好奇心並完成了這本書(? 先誠 於新北市汐止區 "],["author.html", "作者簡介", " 作者簡介 目前就讀於國立臺北大學的大五學生，雙主修社會學系和經濟學系，預計於110年6月畢業。 "],["intro.html", "Chapter 1 R 資料處理 1.1 遺漏值處理 1.2 資料分群", " Chapter 1 R 資料處理 首先，先去下載資料，此資料來源是PSFD華人家庭動態調查，我目前將主樣本的資料合併成一個.sav的檔案，可由此下載 url &lt;- &quot;https://raw.githubusercontent.com/funkjerry/psfd_data/main/RIRRR.sav&quot; browseURL(url) rio 是一個幫助匯入不同檔案格式的套件，dplyr、tidyr 均是幫助資料清理的套件 library(rio) library(dplyr) library(tidyr) 匯入.sav檔案 import(&quot;https://raw.githubusercontent.com/funkjerry/psfd_data/main/RIRRR.sav&quot;)-&gt;raw1 隨機取十位受訪者的資料 knitr::kable(raw1[sample(nrow(raw1),10),],caption = &#39;從1999到2000年的主樣本中，共有6萬多筆資料，隨機選出10筆&#39;, booktabs = TRUE ) Table 1.1: 從1999到2000年的主樣本中，共有6萬多筆資料，隨機選出10筆 id category scale period district male birth_y happy life4 life health work_satis family_satis eco_satis marry_satis edu grad_y grad work indust occu workfor workers workplace workhrs wage seniority fworkyrs fwork_indust fwork_occu fworkfor fwage rwork_indust rwork_occu rworkfor rwage rwyear pension marry myear Sbirth_y Sedu Shealth Swork Sindust Soccu Sworkfor Sworkers Sworkplace Sworkhrs Swage Sseniority Srwork_indust Srwork_occu Srworkfor Srwage Srwyear filial_1 filial_2 filial_3 filial_4 filial_5 filial_6 filial_7 filial_8 filial_9 family_1 family_2 family_3 family_4 family_5 family_6 family_7 family_8 family_9 cohabit_f cohabit_m cohabit_Sf cohabit_Sm siblings love_fa love_mom love_bro love_sis love_S love_son love_dau brother_old brother_young sister_old sister_young children sons daughters C1male C1birth_y C1rank C1edu C1care C2male C2birth_y C2rank C2edu C2care C3male C3birth_y C3rank C3edu C3care C4male C4birth_y C4rank C4edu C4care C5male C5birth_y C5rank C5edu C5care C6male C6birth_y C6rank C6edu C6care 36998 6040160 1 1 1999 913 1 47 NA NA NA 4 NA NA NA NA 3 60 1 1 6 9510 3 6 993 60 50000 18.0 61 3 9970 3 2e+03 NA NA NA NA NA NA 3 82 61 6 4 1 3 7320 3 5 999 52 12000 0.0000 NA NA NA NA NA 5 5 5 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 0 1 2 2 8 5 5 5 5 5 5 0 2 1 5 0 2 2 0 1 83 NA 2 2 1 83 NA 2 2 0 0 NA 0 0 0 0 NA 0 0 NA NA NA NA NA NA NA NA NA NA 27479 4120240 1 2 2010 950 2 42 7 NA 6 2 NA 4 NA NA 3 NA NA 2 0 0 0 0 0 0 0 0.0 NA NA NA NA NA NA NA NA NA NA 2 3 62 33 3 4 1 0 0 0 0 950 70 30000 14.9167 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 63 1 8 NA 1 65 2 8 NA 1 66 3 8 NA 1 75 4 8 NA 0 0 0 0 NA 0 0 0 0 NA 11532 1250120 1 NA 2020 NA 2 25 6 NA 6 3 NA 3 4 NA 1 996 96 2 NA NA 96 96 0 996 9999996 NA 996 NA NA 96 1e+07 NA NA 96 1e+07 996 96 6 NA NA 96 NA NA NA NA 96 96 0 996 9999996 NA NA NA NA NA 996 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 2 0 1 997 1 4 96 1 997 2 4 96 96 996 0 96 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 29016 4214240 1 5 2016 421 1 80 5 NA 5 3 NA NA NA NA 12 104 1 1 3 2144 3 7 437 40 27000 NA 0 0 0 0 0e+00 NA NA NA NA NA NA 1 0 0 0 NA 0 0 0 0 0 0 0 0 NA NA NA NA NA NA 5 5 3 4 5 4 3 2 4 3 5 5 5 1 5 5 5 1 0 1 0 0 2 0 5 0 5 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NA NA NA NA NA 46723 7230180 1 NA 2003 726 2 NA NA NA NA 2 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 978 21580 1 3 2011 710 2 58 6 NA 4 3 3 4 NA NA 8 NA NA 1 0 0 0 0 710 45 22000 4.5 NA NA NA NA NA NA NA NA NA NA 2 3 0 0 8 3 1 0 0 0 0 822 60 35000 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 2 2 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 1 83 1 8 NA 1 85 2 4 NA 1 86 3 4 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 35395 6011170 1 3 2012 637 2 62 3 NA 3 2 NA 3 NA NA 3 NA NA 2 0 0 0 0 0 0 0 0.0 NA NA NA NA NA NA NA NA NA NA 2 3 0 0 4 4 1 3 7919 3 96 432 72 9999996 0.0833 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 0 2 2 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 87 1 4 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 53744 8250010 1 NA 2003 300 1 NA NA NA NA 3 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 7147 1070480 1 1 2018 324 2 45 7 NA 7 4 NA 4 3 4 4 NA 0 2 0 0 0 0 0 0 0 NA 0 0 0 0 0e+00 0 0 0 0e+00 0 0 3 0 42 0 4 2 0 0 0 0 0 0 0 NA NA NA NA NA 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 0 2 NA NA NA NA NA NA NA NA NA NA NA NA 2 1 1 1 67 1 12 0 2 69 2 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37757 6120300 1 2 2008 724 1 35 3 NA 3 3 2 3 NA NA NA NA NA 1 0 0 0 0 724 56 10000 48.0 NA NA NA NA NA NA NA NA NA NA 2 3 52 33 1 2 1 0 0 0 0 724 56 1 45.0000 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 2 2 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 53 1 4 NA 1 55 2 8 NA 2 59 3 4 NA 1 61 4 4 NA 0 0 0 0 NA 0 0 0 0 NA 1.1 遺漏值處理 使用fill函數將raw1裏面的缺失值依照id(受訪者編號)來回填，fill.direction，會決定回填的優先順序，下例中是先參照下方再參照上方。 raw1 %&gt;% group_by(id) %&gt;% fill(scale, birth_y, .direction = &quot;downup&quot;) %&gt;% ungroup-&gt;wang 創造出age(年齡)變項，用受訪者西元出生年減去1911。 labelsx=c(&quot;25-29&quot;,&quot;30-34&quot;,&quot;35-39&quot;,&quot;40-44&quot;,&quot;45-49&quot;,&quot;50-54&quot;,&quot;55-59&quot;,&quot;60-64&quot;,&quot;65-69&quot;,&quot;70-74&quot;) wang %&gt;% drop_na(birth_y)-&gt;wang wang$age&lt;- (wang$period-1911)-wang$birth_y 1.2 資料分群 將受訪者五歲分成一組，從25歲開始，最年長為74歲。 for(i in 1:nrow(wang)){ if(wang$age[i] %in% 25:29){ wang$birth_g[i]&lt;-&quot;1&quot; }else if (wang$age[i] %in% 30:34){wang$birth_g[i]&lt;-&quot;2&quot; }else if (wang$age[i] %in% 35:39){wang$birth_g[i]&lt;-&quot;3&quot; }else if (wang$age[i] %in% 40:44){wang$birth_g[i]&lt;-&quot;4&quot; }else if (wang$age[i] %in% 45:49){wang$birth_g[i]&lt;-&quot;5&quot; }else if (wang$age[i] %in% 50:54){wang$birth_g[i]&lt;-&quot;6&quot; }else if (wang$age[i] %in% 55:59){wang$birth_g[i]&lt;-&quot;7&quot; }else if (wang$age[i] %in% 60:64){wang$birth_g[i]&lt;-&quot;8&quot; }else if (wang$age[i] %in% 65:69){wang$birth_g[i]&lt;-&quot;9&quot; }else if (wang$age[i] %in% 70:74){wang$birth_g[i]&lt;-&quot;10&quot; }else{wang$birth_g[i]&lt;-NA } } 將受訪者依照西元出生年代分群，較容易看見重大事件對於該世代的影響。 for(i in 1:nrow(wang)){ if(wang$birth_y[i] %in% 23:38){ wang$birth_p[i]&lt;-&quot;1949以前&quot; }else if (wang$birth_y[i] %in% 39:45){wang$birth_p[i]&lt;-&quot;1950 - 56&quot; }else if (wang$birth_y[i] %in% 46:52){wang$birth_p[i]&lt;-&quot;1957 - 63&quot; }else if (wang$birth_y[i] %in% 53:59){wang$birth_p[i]&lt;-&quot;1964 - 70&quot; }else if (wang$birth_y[i] %in% 60:65){wang$birth_p[i]&lt;-&quot;1971 - 76&quot; }else if (wang$birth_y[i] %in% 66:72){wang$birth_p[i]&lt;-&quot;1977 - 83&quot; }else if (wang$birth_y[i] %in% 73:80){wang$birth_p[i]&lt;-&quot;1984以後&quot; }else{wang$birth_p[i]&lt;-NA } } 1.2.1 生活快樂感資料 將未填寫生活快樂感以及在25~74歲以外的受訪者刪去，讓受訪者依照出生年區間和年齡區間分層，計算他們的平均生活快樂感。 wang %&gt;% drop_na(happy) %&gt;% group_by(birth_p, birth_g) %&gt;% summarise(point=mean(happy),n=n())-&gt;happy happy %&gt;% drop_na(birth_g)-&gt;happy as.numeric(happy$birth_g)-&gt;happy$birth_g as.factor(happy$birth_g)-&gt;happy$birth_g as.factor(happy$birth_p)-&gt;happy$birth_p happy$point &lt;- round(happy$point, digits = 2) 1.2.2 生活幸福感資料 將未填寫生活幸福感以及在25~74歲以外的受訪者刪去，讓受訪者依照出生年區間和年齡區間分層，計算他們的平均生活幸福感。 wang %&gt;% drop_na(life) %&gt;% group_by(birth_p, birth_g) %&gt;% summarise(point=mean(life),n=n())-&gt;life life %&gt;% drop_na(birth_g)-&gt;life as.numeric(life$birth_g)-&gt;life$birth_g as.factor(life$birth_g)-&gt;life$birth_g as.factor(life$birth_p)-&gt;life$birth_p life$point &lt;- round(life$point, digits = 2) levels(life$birth_p) "],["wind.html", "Chapter 2 資料視覺化 2.1 繪圖套件 2.2 生活快樂感 2.3 生活幸福感 2.4 儀表板", " Chapter 2 資料視覺化 此章節主要注重在於資料的視覺化呈現，未來會增加儀表表與互動式的功能 2.1 繪圖套件 library(ggplot2) library(plotly) 2.2 生活快樂感 創造一個list，包覆所有的圖片，方便未來的儀表板呈現，使用ggplot2套件與plotly套件，以年齡為X軸，以平均生活快樂感為Y軸，並以出生年代分群來繪製折線圖。 graph5&lt;-list() ggplotly( ggplot(happy, aes(x=birth_g, y=point, group=birth_p, color=birth_p, text = paste( &quot;Period:&quot;, birth_p, &quot;&lt;br&gt;N:&quot;, n, &quot;&lt;br&gt;Point:&quot;, point)))+ geom_line(linetype=&quot;solid&quot;,alpha=0.4, size=1)+ geom_point(size=2,alpha=0.7)+ scale_x_discrete(labels=labelsx)+ labs( title=&quot;主樣本的生活快樂感(出生世代)&quot;, x=&quot;主樣本年齡&quot;,y=&quot;平均分數(1 ~ 7分)&quot;)+ ylim(4,5.5), tooltip = &quot;text&quot; ) %&gt;% layout(legend = list( orientation = &quot;l&quot; ) )-&gt;graph5$happy graph5$happy 2.3 生活幸福感 使用ggplot2套件與plotly套件，以年齡為X軸，以平均生活幸福感為Y軸，並以出生年代分群來繪製折線圖。 ggplotly( ggplot(life, aes(x=birth_g, y=point, group=birth_p, color=birth_p, text = paste( &quot;Period:&quot;, birth_p, &quot;&lt;br&gt;N:&quot;, n, &quot;&lt;br&gt;Point:&quot;, point)))+ geom_line(linetype=&quot;solid&quot;,alpha=0.4, size=1)+ geom_point(size=2,alpha=0.7)+ scale_x_discrete(labels=labelsx)+ labs( title=&quot;主樣本的生活過得好不好(出生世代)&quot;, x=&quot;主樣本年齡&quot;,y=&quot;平均分數(1 ~ 7分)&quot;)+ ylim(4,5.5), tooltip = &quot;text&quot; ) %&gt;% layout(legend = list( orientation = &quot;l&quot; ) )-&gt;graph5$life graph5$life 2.4 儀表板 資料詮釋(待補) "]]
