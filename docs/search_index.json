[["intro.html", "Chapter 1 R 資料處理 1.1 遺漏值處理 1.2 資料分群", " Chapter 1 R 資料處理 首先，先去下載資料，此資料來源是PSFD華人家庭動態調查，我目前將主樣本的資料合併成一個.sav的檔案，可由此下載 url &lt;- &quot;https://raw.githubusercontent.com/funkjerry/psfd_data/main/RIRRR.sav&quot; browseURL(url) rio 是一個幫助匯入不同檔案格式的套件，dplyr、tidyr 均是幫助資料清理的套件 library(rio) library(dplyr) library(tidyr) 匯入.sav檔案 import(&quot;https://raw.githubusercontent.com/funkjerry/psfd_data/main/RIRRR.sav&quot;)-&gt;raw1 隨機取十位受訪者的資料 knitr::kable( raw1[sample(nrow(raw1),10),], caption = &#39;從1999到2000年的主樣本中，共有6萬多筆資料，隨機選出10筆&#39;, booktabs = TRUE ) Table 1.1: 從1999到2000年的主樣本中，共有6萬多筆資料，隨機選出10筆 id category scale period district male birth_y happy life4 life health work_satis family_satis eco_satis marry_satis edu grad_y grad work indust occu workfor workers workplace workhrs wage seniority fworkyrs fwork_indust fwork_occu fworkfor fwage rwork_indust rwork_occu rworkfor rwage rwyear pension marry myear Sbirth_y Sedu Shealth Swork Sindust Soccu Sworkfor Sworkers Sworkplace Sworkhrs Swage Sseniority Srwork_indust Srwork_occu Srworkfor Srwage Srwyear filial_1 filial_2 filial_3 filial_4 filial_5 filial_6 filial_7 filial_8 filial_9 family_1 family_2 family_3 family_4 family_5 family_6 family_7 family_8 family_9 cohabit_f cohabit_m cohabit_Sf cohabit_Sm siblings love_fa love_mom love_bro love_sis love_S love_son love_dau brother_old brother_young sister_old sister_young children sons daughters C1male C1birth_y C1rank C1edu C1care C2male C2birth_y C2rank C2edu C2care C3male C3birth_y C3rank C3edu C3care C4male C4birth_y C4rank C4edu C4care C5male C5birth_y C5rank C5edu C5care C6male C6birth_y C6rank C6edu C6care 14324 2273220 1 4 2016 247 1 70 5 NA 5 4 3 3 3 NA 10 NA NA 1 3 3322 3 4 236 42 60000 NA NA NA NA NA NA NA NA NA NA NA 0 3 97 71 6 4 2 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 2 2 2 3 NA NA NA NA NA NA NA 1 0 2 0 1 0 1 2 97 1 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 56139 9040220 1 1 2008 114 1 43 5 NA 5 3 4 4 NA NA NA NA NA 1 15 3102 0 0 200 40 120000 30 NA NA NA NA NA NA NA NA NA NA 2 3 69 41 13 3 1 0 0 0 0 106 30 85000 10 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 69 1 14 NA 2 73 2 13 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 22866 3240090 1 NA 2020 NA 2 33 1 NA 1 1 NA 1 1 NA 1 996 96 2 NA NA 96 96 0 996 9999996 NA 996 NA NA 96 9999996 NA NA 96 9999996 996 96 3 NA 32 96 1 2 NA NA 96 96 0 996 9999996 NA NA NA NA NA 996 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 3 2 1 1 997 1 8 96 1 997 2 8 96 2 997 3 8 96 96 996 0 96 96 96 996 96 96 96 96 996 96 96 96 15856 2422330 1 4 2009 242 1 66 NA NA NA 3 NA NA NA NA 10 87 1 1 10 3520 3 7 330 30 50000 2 89 3 3520 3 45000 NA NA NA NA NA NA 1 0 0 0 NA 0 0 0 0 0 0 0 0 0 NA NA NA NA NA 4 4 2 3 5 4 1 3 3 1 1 1 3 1 1 3 1 4 1 1 0 0 3 3 3 3 3 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA 2035 110470 1 2 2000 806 2 39 NA NA NA 3 NA NA NA NA 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 58 40 8 4 1 3 8410 3 6 812 42 50000 24 0 0 0 0 0 5 4 4 1 4 4 4 2 1 1 5 4 3 5 4 3 3 2 2 2 1 1 6 3 3 3 3 4 5 5 1 3 0 2 3 2 1 2 59 1 9 1 1 61 2 7 1 1 64 3 14 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 58336 9113490 1 4 2016 911 1 68 5 NA 5 3 3 3 3 NA 8 NA NA 1 9 5120 2 1 911 48 30000 NA NA NA NA NA NA NA NA NA NA NA 0 3 92 67 6 4 1 3 7912 5 1 911 48 30000 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 1 1 2 2 1 NA NA NA NA NA NA NA 0 0 1 0 1 0 1 2 92 1 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 57767 9110090 1 2 2011 108 1 41 5 NA 5 4 3 3 NA NA 8 NA NA 1 0 0 0 0 108 75 80000 40 NA NA NA NA NA NA NA NA NA NA 2 3 0 0 8 4 1 0 0 0 0 108 70 1 25 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 1 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 1 72 1 15 NA 1 74 2 13 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 39634 6240440 1 2 2010 924 2 33 1 NA 1 3 NA 2 NA NA 1 NA NA 2 0 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA 2 6 0 0 0 NA 0 0 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 1 55 1 8 NA 2 57 2 8 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 34961 6004230 1 NA 2020 NA 1 74 4 NA 3 2 2 2 2 2 8 90 2 1 NA NA 3 6 621 52 32950 1 996 NA NA 96 9999996 NA NA 96 9999996 996 96 3 108 73 4 2 1 NA NA 3 3 600 40 23100 2 NA NA NA NA 996 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 1 1 2 2 NA NA NA NA NA NA NA NA NA NA NA NA 1 1 0 1 108 1 1 2 96 996 0 96 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 22124 3210230 1 2 2007 241 1 33 5 NA 4 4 NA 4 NA NA NA NA NA 2 0 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA 2 3 NA 33 3 4 2 0 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA 3 NA NA 1 59 1 10 NA 1 61 2 10 NA 2 66 3 10 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 1.1 遺漏值處理 使用fill函數將raw1裏面的缺失值依照id(受訪者編號)來回填，fill.direction，會決定回填的優先順序，下例中是先參照下方再參照上方。 raw1 %&gt;% group_by(id) %&gt;% fill(scale, birth_y, .direction = &quot;downup&quot;) %&gt;% ungroup-&gt;wang 創造出age(年齡)變項，用受訪者西元出生年減去1911。 wang %&gt;% drop_na(birth_y)-&gt;wang wang$age&lt;- (wang$period-1911)-wang$birth_y 1.2 資料分群 將受訪者五歲分成一組，從25歲開始，最年長為74歲。 for(i in 1:nrow(wang)){ if(wang$age[i] %in% 25:29){ wang$birth_g[i]&lt;-&quot;1&quot; }else if (wang$age[i] %in% 30:34){wang$birth_g[i]&lt;-&quot;2&quot; }else if (wang$age[i] %in% 35:39){wang$birth_g[i]&lt;-&quot;3&quot; }else if (wang$age[i] %in% 40:44){wang$birth_g[i]&lt;-&quot;4&quot; }else if (wang$age[i] %in% 45:49){wang$birth_g[i]&lt;-&quot;5&quot; }else if (wang$age[i] %in% 50:54){wang$birth_g[i]&lt;-&quot;6&quot; }else if (wang$age[i] %in% 55:59){wang$birth_g[i]&lt;-&quot;7&quot; }else if (wang$age[i] %in% 60:64){wang$birth_g[i]&lt;-&quot;8&quot; }else if (wang$age[i] %in% 65:69){wang$birth_g[i]&lt;-&quot;9&quot; }else if (wang$age[i] %in% 70:74){wang$birth_g[i]&lt;-&quot;10&quot; }else{wang$birth_g[i]&lt;-NA } } 將受訪者依照西元出生年代分群，較容易看見重大事件對於該世代的影響。 for(i in 1:nrow(wang)){ if(wang$birth_y[i] %in% 23:38){ wang$birth_p[i]&lt;-&quot;1949以前&quot; }else if (wang$birth_y[i] %in% 39:45){wang$birth_p[i]&lt;-&quot;1950 - 56&quot; }else if (wang$birth_y[i] %in% 46:52){wang$birth_p[i]&lt;-&quot;1957 - 63&quot; }else if (wang$birth_y[i] %in% 53:59){wang$birth_p[i]&lt;-&quot;1964 - 70&quot; }else if (wang$birth_y[i] %in% 60:65){wang$birth_p[i]&lt;-&quot;1971 - 76&quot; }else if (wang$birth_y[i] %in% 66:72){wang$birth_p[i]&lt;-&quot;1977 - 83&quot; }else if (wang$birth_y[i] %in% 73:80){wang$birth_p[i]&lt;-&quot;1984以後&quot; }else{wang$birth_p[i]&lt;-NA } } 1.2.1 生活快樂感資料 將未填寫生活快樂感以及在25~74歲以外的受訪者刪去，讓受訪者依照出生年區間和年齡區間分層，計算他們的平均生活快樂感。 wang %&gt;% drop_na(happy) %&gt;% group_by(birth_p, birth_g) %&gt;% summarise(point=mean(happy),n=n())-&gt;happy happy %&gt;% drop_na(birth_g)-&gt;happy as.numeric(happy$birth_g)-&gt;happy$birth_g as.factor(happy$birth_g)-&gt;happy$birth_g as.factor(happy$birth_p)-&gt;happy$birth_p happy$point &lt;- round(happy$point, digits = 2) 1.2.2 生活幸福感資料 將未填寫生活幸福感以及在25~74歲以外的受訪者刪去，讓受訪者依照出生年區間和年齡區間分層，計算他們的平均生活幸福感。 wang %&gt;% drop_na(life) %&gt;% group_by(birth_p, birth_g) %&gt;% summarise(point=mean(life),n=n())-&gt;life life %&gt;% drop_na(birth_g)-&gt;life as.numeric(life$birth_g)-&gt;life$birth_g as.factor(life$birth_g)-&gt;life$birth_g as.factor(life$birth_p)-&gt;life$birth_p life$point &lt;- round(life$point, digits = 2) "]]
