[["intro.html", "Chapter 1 R 資料處理 1.1 遺漏值處理 1.2 資料分群", " Chapter 1 R 資料處理 首先，先去下載資料，此資料來源是PSFD華人家庭動態調查，我目前將主樣本的資料合併成一個.sav的檔案，可由此下載 url &lt;- &quot;https://raw.githubusercontent.com/funkjerry/psfd_data/main/RIRRR.sav&quot; browseURL(url) rio 是一個幫助匯入不同檔案格式的套件，dplyr、tidyr 均是幫助資料清理的套件 匯入.sav檔案 import(&quot;https://raw.githubusercontent.com/funkjerry/psfd_data/main/RIRRR.sav&quot;)-&gt;raw1 隨機取十位受訪者的資料 knitr::kable(raw1[sample(nrow(raw1),10),],caption = &#39;從1999到2000年的主樣本中，共有6萬多筆資料，隨機選出10筆&#39;, booktabs = TRUE ) Table 1.1: 從1999到2000年的主樣本中，共有6萬多筆資料，隨機選出10筆 id category scale period district male birth_y happy life4 life health work_satis family_satis eco_satis marry_satis edu grad_y grad work indust occu workfor workers workplace workhrs wage seniority fworkyrs fwork_indust fwork_occu fworkfor fwage rwork_indust rwork_occu rworkfor rwage rwyear pension marry myear Sbirth_y Sedu Shealth Swork Sindust Soccu Sworkfor Sworkers Sworkplace Sworkhrs Swage Sseniority Srwork_indust Srwork_occu Srworkfor Srwage Srwyear filial_1 filial_2 filial_3 filial_4 filial_5 filial_6 filial_7 filial_8 filial_9 family_1 family_2 family_3 family_4 family_5 family_6 family_7 family_8 family_9 cohabit_f cohabit_m cohabit_Sf cohabit_Sm siblings love_fa love_mom love_bro love_sis love_S love_son love_dau brother_old brother_young sister_old sister_young children sons daughters C1male C1birth_y C1rank C1edu C1care C2male C2birth_y C2rank C2edu C2care C3male C3birth_y C3rank C3edu C3care C4male C4birth_y C4rank C4edu C4care C5male C5birth_y C5rank C5edu C5care C6male C6birth_y C6rank C6edu C6care 41863 7020540 1 1 2007 513 2 44 5 NA 5 4 2 2 NA NA NA NA NA 1 0 0 0 0 513 70 8000 6.000000 NA NA NA NA NA NA NA NA NA NA 2 3 NA 41 8 3 1 0 0 0 0 513 21 3000 15.000000 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 2 2 2 NA NA NA NA NA NA NA NA NA NA NA NA 4 NA NA 2 69 1 10 NA 2 70 2 10 NA 1 72 3 12 NA 1 73 4 8 NA 0 0 0 0 NA 0 0 0 0 NA 42327 7024700 1 NA 2020 NA 2 74 4 NA 5 3 3 3 2 3 12 96 1 1 NA NA 6 96 806 96 48000 1.000000 996 NA NA 96 9999996 NA NA 96 9999996 996 96 3 NA 72 96 4 1 NA NA 3 7 831 102 100000 8.000000 NA NA NA NA 996 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 2 2 2 NA NA NA NA NA NA NA NA NA NA NA NA 2 1 1 1 106 1 0 96 2 108 2 1 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 16680 3003590 1 NA 2020 NA 2 67 5 NA 6 3 3 3 3 3 10 96 1 1 NA NA 3 6 303 45 80000 NA 996 NA NA 96 9999996 NA NA 96 9999996 996 96 3 NA 62 96 3 1 NA NA 3 5 300 50 1200000 12.000000 NA NA NA NA 996 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 2 2 2 NA NA NA NA NA NA NA NA NA NA NA NA 2 2 0 96 996 98 96 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 96 996 96 96 96 25549 4030350 1 1 2005 950 NA NA NA 3 NA 4 NA NA NA NA NA NA NA 1 0 0 0 0 0 40 45000 NA NA NA NA NA NA NA NA NA NA NA 2 1 NA NA 0 NA NA 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 0 0 NA 0 0 4 0 0 0 0 NA NA NA NA 0 NA NA 0 0 0 NA NA 0 0 0 NA NA 0 0 0 NA NA 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA 4283 1030030 1 1 2009 303 2 46 5 NA 6 5 NA 3 NA NA 4 NA NA 2 0 0 0 0 0 0 0 0.000000 NA NA NA NA NA NA NA NA NA NA 1 3 68 41 3 2 2 0 0 0 0 0 0 0 0.000000 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 0 2 7 3 4 5 5 5 5 5 4 2 1 0 NA NA NA 2 69 1 12 NA 1 70 2 8 NA 1 72 3 12 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 60509 9504140 1 5 2018 950 1 74 4 NA 4 2 2 3 1 3 13 NA 1 1 998 9998 6 0 950 40 35000 NA 0 0 0 0 0 0 0 0 0 0 0 3 0 75 0 4 1 998 9998 6 0 950 40 36000 5.000000 NA NA NA NA 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 2 2 2 NA NA NA NA NA NA NA NA NA NA NA NA 1 1 0 1 103 1 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39856 6250330 3 2 2002 924 NA NA NA 2 NA 1 NA NA NA NA NA NA NA 2 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA 2 1 NA NA 0 1 2 0 0 0 0 0 0 0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 5 NA NA NA NA 1 NA NA NA NA 2 NA NA NA NA 3 NA NA NA NA 4 NA NA NA NA NA NA NA NA NA NA NA NA 14945 2353170 1 4 2011 235 1 66 5 NA 5 3 3 3 NA NA 14 NA NA 1 0 0 0 0 106 40 40000 4.416667 NA NA NA NA NA NA NA NA NA NA 2 3 0 0 13 4 1 0 0 0 0 104 40 40000 3.166667 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 2 2 2 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 1 97 1 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 21491 3150320 1 2 2009 235 1 38 4 NA 6 4 NA 3 NA NA 3 NA NA 2 0 0 0 0 0 0 0 0.000000 NA NA NA NA NA NA NA NA NA NA 2 3 62 40 3 4 2 0 0 0 0 0 0 0 0.000000 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 0 0 0 2 6 3 3 3 0 3 5 5 2 4 0 0 NA NA NA 1 63 1 10 NA 1 65 2 4 NA 1 66 3 6 NA 2 68 4 8 NA 0 0 0 0 NA 0 0 0 0 NA 42544 7030210 1 1 2009 712 2 45 7 NA 7 3 4 4 NA NA 7 NA NA 1 0 0 0 0 712 40 30000 30.000000 NA NA NA NA NA NA NA NA NA NA 2 6 0 0 0 NA 0 0 0 0 0 0 0 0 0.000000 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 2 0 2 0 5 5 5 5 5 5 5 5 0 1 0 4 NA NA NA 2 69 1 13 NA 1 70 2 7 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 0 0 0 0 NA 1.1 遺漏值處理 使用fill函數將raw1裏面的缺失值依照id(受訪者編號)來回填，fill.direction，會決定回填的優先順序，下例中是先參照下方再參照上方。 創造出age(年齡)變項，用受訪者西元出生年減去1911。 1.2 資料分群 將受訪者五歲分成一組，從25歲開始，最年長為74歲。 將受訪者依照西元出生年代分群，較容易看見重大事件對於該世代的影響。 1.2.1 生活快樂感資料 將未填寫生活快樂感以及在25~74歲以外的受訪者刪去，讓受訪者依照出生年區間和年齡區間分層，計算他們的平均生活快樂感。 wang %&gt;% drop_na(happy) %&gt;% group_by(birth_p, birth_g) %&gt;% summarise(point=mean(happy),n=n())-&gt;happy ## `summarise()` regrouping output by &#39;birth_p&#39; (override with `.groups` argument) happy %&gt;% drop_na(birth_g)-&gt;happy as.numeric(happy$birth_g)-&gt;happy$birth_g as.factor(happy$birth_g)-&gt;happy$birth_g as.factor(happy$birth_p)-&gt;happy$birth_p happy$point &lt;- round(happy$point, digits = 2) 1.2.2 生活幸福感資料 將未填寫生活幸福感以及在25~74歲以外的受訪者刪去，讓受訪者依照出生年區間和年齡區間分層，計算他們的平均生活幸福感。 wang %&gt;% drop_na(life) %&gt;% group_by(birth_p, birth_g) %&gt;% summarise(point=mean(life),n=n())-&gt;life ## `summarise()` regrouping output by &#39;birth_p&#39; (override with `.groups` argument) life %&gt;% drop_na(birth_g)-&gt;life as.numeric(life$birth_g)-&gt;life$birth_g as.factor(life$birth_g)-&gt;life$birth_g as.factor(life$birth_p)-&gt;life$birth_p life$point &lt;- round(life$point, digits = 2) levels(life$birth_p) ## [1] &quot;1949以前&quot; &quot;1950 - 56&quot; &quot;1957 - 63&quot; &quot;1964 - 70&quot; &quot;1971 - 76&quot; &quot;1977 - 83&quot; ## [7] &quot;1984以後&quot; "]]
